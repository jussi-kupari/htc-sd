
GREGOR KICZALES: Now I'm going to go on to the data definition for the changing
world state.
And looking at the analysis, I see that there's
two pieces of changing information, two changing information values
that naturally belong together.
And so that tells me that I want to use a compound data definition.
So when you use a compound data definition,
the first thing we have to do is a structure definition for it.
So let me make a structure, and I guess I'll just call it cow.
And it has two fields.
And I'll call one x for the x-coordinate and one dx
for the current rate of change in the x-coordinate.
And I'll say cow is make cow.
Now we know that this cow nicely stays in the box.
So that means we know that the x-coordinate is bounded
a certain way in this world program.
So what I'm going to do here is I'm going to say natural zero comma
width as a way of saying that the cow's x-coordinate stays
within the boundaries of the box.

And we don't know any bounds on dx or on the velocity of the cow.
But let's just decide that it's going to be at least an integer.
That'll make some other things simpler.
So we'll say that this is an integer.

We'll say the interpretation of a cow is that if you have a cow make cow
with an x and dx, then that's a cow with x-coordinates x and velocity dx.

We'll say that the x is the center of the cow.

We'll say that x is in screen coordinates, or pixels.

And we'll say that dx is in pixels per tick.

So that if dx is 3, for example, that means that on each clock tick,
the cow moves by three pixels or its x value gets bigger by three.
And here we're going to start to see where some examples get
a bit more interesting.
I'm going to make a couple of them.
Let's say C1.
Let's say this is a cow that's current position is 10
and that its current dx is 3.
And I'll just label this one to help me understand the interpretation.
At position 10, moving left to right.
And here's another one.

And this one is at 20, and it's moving the other way.
So this is a case where as the data definition becomes more complicated,
the examples become more useful to really understand
how the data definition works and what the interpretation is.
Now, of course, I have to do the template and template rules used.
But what I'm going to do to speed this video up
a little bit is I'm kind of going to pull the next stage of the roast out
of the oven ready done.
I'll go to Cowabunga V1, and it already has the complete data definition here,
everything that we just did plus the template and template rules used.
Next step is going to be to set up the main function and all of the wish list
entries for the Big Bang option handlers.
And since that's straightforward, again, I'm
going to jump ahead to go to Cowabunga V2 that has all that.
You might want to not do that and go ahead and develop that yourself
as a way of checking your work.
I'm going to jump ahead now, though.